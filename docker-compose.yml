services:
  api1:
    hostname: api1
    container_name: api1
    build: .
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: admin
      DB_PASSWORD: admin
      DB_NAME: rinha
      SCREENING_BUFFER: 40
      SCREENING_WORKERS: 5
      HIGH_PRIORITY_BUFFER: 15
      HIGH_PRIORITY_WORKERS: 8
      LOW_PRIORITY_BUFFER: 20
      LOW_PRIORITY_WORKERS: 12
      WAITING_BUFFER: 100
      WAITING_WORKERS: 20
      K_FACTOR: 0.7
      LIMIT_TIME_HEALTH: 3
      DEFAULT_URL: http://payment-processor-default:8080
      FALLBACK_URL: http://payment-processor-fallback:8080
      WAITING_ROOM_SLEEP_TIME: 400ms
    networks:
      - rinha-back
      - payment-processor
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: "110MB"
          cpus: "0.5"

  api2:
    hostname: api2
    container_name: api2
    build: .
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_USER: admin
      DB_PASSWORD: admin
      DB_NAME: rinha
      SCREENING_BUFFER: 40
      SCREENING_WORKERS: 5
      HIGH_PRIORITY_BUFFER: 15
      HIGH_PRIORITY_WORKERS: 8
      LOW_PRIORITY_BUFFER: 20
      LOW_PRIORITY_WORKERS: 12
      WAITING_BUFFER: 100
      WAITING_WORKERS: 20
      K_FACTOR: 0.7
      LIMIT_TIME_HEALTH: 3
      DEFAULT_URL: http://payment-processor-default:8080
      FALLBACK_URL: http://payment-processor-fallback:8080
      WAITING_ROOM_SLEEP_TIME: 400ms
    networks:
      - rinha-back
      - payment-processor
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: "110MB"
          cpus: "0.5"     
               
  db:
    hostname: storage
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - ./payment.sql:/docker-entrypoint-initdb.d/payment.sql:ro
      - pgdata:/var/lib/postgresql/data
    networks:
      - rinha-back
      - payment-processor
    ports:
      - "5432:5432"
    restart: unless-stopped
    command: >
      postgres
      -c fsync=off
      -c synchronous_commit=off
      -c full_page_writes=off
      -c shared_buffers=32MB
      -c work_mem=3MB
      -c max_connections=30
      -c log_min_duration_statement=-1
      -c logging_collector=off
      -c effective_cache_size=96MB
    deploy:
      resources:
        limits:
          memory: "100MB"
          cpus: "0.4"

  nginx:
    image: nginx:alpine
    container_name: nginx-lb
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: "30MB"
    networks:
      - rinha-back
      - payment-processor

volumes:
  pgdata:

networks:
  rinha-back:
    driver: bridge
  payment-processor:
    external: true
